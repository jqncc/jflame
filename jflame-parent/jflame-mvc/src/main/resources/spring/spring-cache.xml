<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

   <!--  <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <property name="configLocation" value="classpath:spring/ehcache.xml"></property>  
    </bean> -->
    <!-- redis cache -->
     <bean id="cacheKeyGenerator" class="org.jflame.toolkit.key.CacheKeyGenerator">
        <property name="keyPrefix" value="com.ghgcn.xxx"></property>
     </bean>
    <cache:annotation-driven cache-manager="cacheManager" key-generator="cacheKeyGenerator" />  
    <bean id="sentinelConfiguration"  
        class="org.springframework.data.redis.connection.RedisSentinelConfiguration">  
        <property name="master">  
            <bean class="org.springframework.data.redis.connection.RedisNode">  
                <property name="name" value="mymaster"></property>  
            </bean>  
        </property>  
        <property name="sentinels">  
            <set>  
                <bean class="org.springframework.data.redis.connection.RedisNode">  
                    <constructor-arg name="host" value="${redis.slave.host}"></constructor-arg>  
                    <constructor-arg name="port" value="${redis.slave.port}"></constructor-arg>  
                </bean>  
            </set>  
        </property>  
    </bean>  
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="true" />
    </bean>
    <bean id="redisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="usePool" value="true" />
        <property name="database" value="${redis.db}"></property>
        <!-- <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="sentinelConfig" ref="sentinelConfiguration"></property>  -->
        <constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>  
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>   
    </bean>
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
         <!--  开启事务，可以通过transcational注解控制 
          <property name="enableTransactionSupport" value="true" />-->
    </bean> 
    <!-- declare Redis Cache Manager -->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"> 
        <constructor-arg index="0" ref="redisTemplate"></constructor-arg>
        <property name="defaultExpiration" value="7200"/><!-- 默认过期时间,单位:秒 -->
        <!-- 指定key缓存过期时间 ,单位:秒 -->
        <!-- <property name="expires"> 
            <map>
                <entry key="gameCaches" value="1200"></entry>
            </map>
        </property> -->
    </bean> 
    
    <import resource="spring-db.xml"/>
</beans>
